#!/usr/bin/env bash

set -euo pipefail

export PATH="${HOME}/.local/bin:${PATH}"

readonly sj_access_name="${SJ_ACCESS_NAME:-dw-write}"
uplink import "${sj_access_name}" "${SJ_ACCESS}" || true

readonly csv_file="$(mktemp -t people_history-XXXX.csv)"

psql -c 'COPY people_history TO STDOUT CSV;' "${DATABASE_URL}" > "${csv_file}"
chmod -v 400 "${csv_file}"

query_create() {
  cat <<SQL
.echo on
DROP TABLE IF EXISTS load_table;
CREATE TABLE load_table (
  person_id  INT         NOT NULL,
  timestamp  TIMESTAMPTZ NOT NULL,
  is_on_call BOOLEAN     NOT NULL
);
SQL
}

query_load() {
  local -r load_file="$1"

  cat <<SQL
.echo on
.mode csv
.import ${load_file} load_table
SQL
}

query_move() {
  cat <<SQL
.echo on
DROP TABLE IF EXISTS call_status_events;
CREATE TABLE call_status_events (
  timestamp  TIMESTAMPTZ NOT NULL,
  person_id  INT         NOT NULL,
  is_on_call BOOLEAN     NOT NULL
);
INSERT INTO call_status_events
        (timestamp, person_id, is_on_call)
  SELECT timestamp, person_id, is_on_call
  FROM load_table;
DROP TABLE load_table;
SQL
}

sqlite_file="$(mktemp -t call_status-XXXX.db)"
query_create             | sqlite3 "${sqlite_file}"
query_load "${csv_file}" | sqlite3 "${sqlite_file}"
query_move               | sqlite3 "${sqlite_file}"
chmod -v 400 "${sqlite_file}"

dw_push 'call-events' "${sqlite_file}" "${SJ_PREFIX:-sj://dw-inbox/call-events}"

psql --echo-all "${DATABASE_URL}" <<< "
  SELECT CURRENT_TIMESTAMP;

  DELETE FROM people_history
  WHERE timestamp < CURRENT_TIMESTAMP - '${LOCAL_HISTORY_RETENTION:-10 days}'::INTERVAL;
"
